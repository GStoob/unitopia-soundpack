<?xml version="1.0" encoding="iso-8859-1"?>
<!DOCTYPE muclient>
<!-- Saved on Sonntag, Mai 17, 2020, 3:19 PM -->
<!-- MuClient version 5.05 -->

<!-- Plugin "unitopia" generated by Plugin Wizard -->

<muclient>
<plugin
   name="unitopia"
   author="FrankieT, Arija"
   id="32f743256f9d2090ecfef8aa"
   language="Lua"
   purpose="UNItopia MUSHclient Soundpack"
   date_written="2020-05-17 15:18:42"
   save_state="n"
   requires="5.05"
   version="1.0"
   >

</plugin>

<!--  Get our standard constants -->

<include name="constants.lua"/>

<!--  Triggers  -->

<triggers>
  <trigger
  enabled="y"
  match="Auf der Roemerstrasse IV.*"
  omit_from_log="y"
  omit_from_output="y"
  sequence="100"
  >
  </trigger>
  <trigger
  enabled="y"
  match="Auf der Roemerstrasse V."
  omit_from_log="y"
  omit_from_output="y"
  sequence="100"
  >
  </trigger>
  <trigger
  enabled="y"
  match="Auf der Roemerstrasse VII."
  omit_from_log="y"
  omit_from_output="y"
  sequence="100"
  >
  </trigger>
  <trigger
  enabled="y"
  match="Auf einem Pfad im Maerchenland."
  omit_from_log="y"
  omit_from_output="y"
  sequence="100"
  >
  </trigger>
  <trigger
  enabled="y"
  match="Auf einem Pfad."
  omit_from_log="y"
  omit_from_output="y"
  sequence="100"
  >
  </trigger>
  <trigger
  enabled="y"
  match="Auf einem Weg."
  omit_from_log="y"
  omit_from_output="y"
  sequence="100"
  >
  </trigger>
  <trigger
  enabled="y"
  match="Auf einem schmalen Pfad."
  omit_from_log="y"
  omit_from_output="y"
  sequence="100"
  >
  </trigger>
  <trigger
  enabled="y"
  match="Auf einer neu ausgebauten Strasse."
  omit_from_log="y"
  omit_from_output="y"
  sequence="100"
  >
  </trigger>
  <trigger
   enabled="y"
  match="Ein Weg in einer Steppenlandschaft."
  omit_from_log="y"
  omit_from_output="y"
  sequence="100"
  >
  </trigger>
  <trigger
  enabled="y"
  match="*sich wieder erholt und*"
  send_to="12"
  omit_from_log="y"
  omit_from_output="y"
  sequence="100"
  >
  <send>PlaySound("Angel/WingReg.ogg")</send>
  </trigger>
  <trigger
  enabled="y"
  match="*sich deutlich auf deine Ausdauer nieder.*"
  omit_from_log="y"
  omit_from_output="y"
  sequence="100"
  >
  </trigger>
  <trigger
  enabled="y"
  match="*hinaus in die*"
  omit_from_log="y"
  omit_from_output="y"
  sequence="100"
  >
  </trigger>
  <trigger
  enabled="y"
  match="*sehen erholungs*"
  send_to="12"
  omit_from_log="y"
  omit_from_output="y"
  sequence="100"
  >
  <send>PlaySound("Angel/WingDown.ogg")</send>
  </trigger>
  <trigger
  enabled="y"
  match="*Sie sehen recht frisch und fit*"
  send_to="12"
  omit_from_log="y"
  omit_from_output="y"
  sequence="100"
  >
  <send>PlaySound("Angel/WingUp.ogg")</send>
  </trigger>
  <trigger
  enabled="y"
  match="*doch etwas besser schonen sollen*"
  send_to="12"
  omit_from_log="y"
  omit_from_output="y"
  sequence="100"
  >
  <send>PlaySound("Angel/WingError.ogg")</send>
  </trigger>
  <trigger
  enabled="y"
  match="Das oktarine Leuchten des Magystrons erfrischt dich."
  send_to="12"
  omit_from_log="y"
  omit_from_output="y"
  sequence="100"
  >
  <send>PlaySound("Misc/Reg.ogg")</send>
  </trigger>
  <trigger
  enabled="y"
  match="*Die Kraft der Eiche*"
  send_to="12"
  omit_from_log="y"
  omit_from_output="y"
  sequence="100"
  >
  <send>PlaySound("Misc/Reg.ogg")</send>
  </trigger>
  <trigger
  enabled="y"
  match="*wie eine starke, dunkle Macht dich*"
  send_to="12"
  omit_from_log="y"
  omit_from_output="y"
  sequence="100"
  >
  <send>PlaySound("Misc/Reg.ogg")</send>
  </trigger>
  <trigger
  enabled="y"
  match="*Endlich hast du mal wieder Zeit, deinem Geist freien *"
  send_to="12"
  omit_from_log="y"
  omit_from_output="y"
  sequence="100"
  >
  <send>PlaySound("Misc/Reg.ogg")</send>
  </trigger>

</triggers>

<!--  Aliases  -->

<aliases>
</aliases>

<!--  Script  -->

<script>
<![CDATA[
require("unitopia.configuration-manager")
require("unitopia.audio-system")
require("unitopia.plugin-manager")
require("pl.class")

PPI = require("ppi")
Path = require("pl.path")
CONFIG_FILE_NAME = "settings.dat"
CurrentDomain = ""
CurrentRoomName = ""

Audio = AudioSystem()
PluginManager = PluginManager()
ConfigurationManager = ConfigurationManager()
Gmcp = nil

-- The following are the user specific settings. The tables hold default values, so that a 
-- valid settings file can be generated on the first soundpack start
UserConfig = {}
UserConfig.Settings = {}
UserConfig.Settings.ScreenReaderPlugin = "MushReader"
UserConfig.Settings.SoundVolume = 20
UserConfig.Settings.AmbienceVolume = 15
UserConfig.Settings.MusicVolume = 10
UserConfig.Settings.SoundsMuted = 0
UserConfig.Settings.AmbienceMuted = 0
UserConfig.Settings.MusicMuted = 0

function OnPluginInstall()
  -- Initialize all required plugins
  PluginManager:AddPlugin("LuaAudio.xml")
  PluginManager:AddPlugin("output_functions.xml")
  PluginManager:AddPlugin("omit_blank_lines.xml")
  PluginManager:AddPlugin("channel_history.xml")
  PluginManager:AddPlugin(UserConfig.Settings.ScreenReaderPlugin..".xml")
  PluginManager:AddPlugin("unitopia/GMCP.xml")
  PluginManager:AddPlugin("unitopia/umlautNormalizer.xml")
  PluginManager:LoadPlugins()

  -- Check if this is the first soundpack start. This is done by checking whether the settings file exists or not.
  if (IsFirstSoundpackStart()) then
    world.Note("Anscheinend wird das Soundpack zum ersten mal gestartet. Generiere benutzerspezivische Einstellungsdatei...")
    ConfigurationManager:SaveUserConfig(CONFIG_FILE_NAME)
    world.Note("Einstellungsdatei generiert. Viel Spass mit dem UNItopia Soundpack!")
  else
    UserConfig = ConfigurationManager:LoadUserConfig(CONFIG_FILE_NAME)
    world.Note("Einstellungen geladen.")
  end

  -- Now, initialize the audio output plugin
  Audio:InitializeLuaAudio()

  -- Bootstraps the GMCP plugin once it's loaded
  -- (ID, on_success, on_failure)
  PPI.OnLoad(Constants.Plugins.GMCP_PLUGIN_ID, function(gmcp)
    gmcp.Listen("Core.Hello", OnCoreHello)
    gmcp.Listen("Comm.Say", OnUnitopiaCommunication)
    gmcp.Listen("Comm.Tell", OnUnitopiaCommunication)
    gmcp.Listen("Comm.Soul", OnUnitopiaCommunication)
    gmcp.Listen("Room.Info", OnUnitopiaRoomInfo)
    Gmcp = gmcp
  end,
  function (error)
    world.Note("Fehler beim initialisieren des GMCP Plugins: "..error)
  end)
end

function OnPluginListChanged()
  -- Delayed call to PPI.Refresh() to ensure that all plugins are loaded on execution of this method
  DoAfterSpecial(0.5, "PPI.Refresh()", sendto.script)
end

function OnCoreHello(message, data)
  -- Now, register all the GMCP modules that UNItopia supports
  -- We can do this only after the handshake has been established
  Gmcp.RegisterModules()
end

function OnPluginConnect()
  PlaySound("Misc/SoundpackStart.ogg")
  InitializeHotkeys()
  InitializeNumPad()
end

function OnPluginDisconnect()
  PlaySound("Misc/Exit.ogg")
  ConfigurationManager:SaveUserConfig(CONFIG_FILE_NAME)
  world.Note("Einstellungen gespeichert.")
  PluginManager:UnloadPlugins()
end

function OnUnitopiaCommunication(message, rawData)
  if (message == "Comm.Say") then
    PlaySound("Comm/Say.ogg")
  elseif (message == "Comm.Tell") then
    PlaySound("Comm/Tell.ogg")
  elseif (message == "Comm.Soul") then
    local item = Gmcp.GetById(message)
    if (item) and (string.find(item["player"], "/p/Item/Toy/Kuscheli/obj/kuscheli", 1, true)) then
      PlaySound("Comm/Kuscheli.ogg")
    end
  end
end

function OnUnitopiaRoomInfo(message, rawData)
  local info = Gmcp.GetById(message)

  if (info) then
    local domain, roomName = info["domain"], info["name"]

    if (domain) and (roomName) then
      SetAmbienceForDomain(domain)
      SetAmbienceForIndividualRoom(roomName)
    end
  end
end

function SetAmbienceForDomain(domain)
  domain = string.lower(domain)

  if (CurrentDomain == domain) then return end

  Audio:Stop(CurrentAmbience)

  if (domain == "himmel") then
    CurrentAmbience = PlayAmbienceLoop("Angel/Flying.ogg")
  end
  CurrentDomain = domain
end

function SetAmbienceForIndividualRoom(roomName)
  -- TODO: Add ambience loops for individual rooms here.
  roomName = string.lower(roomName)
  CurrentRoomName = roomName
end

function IsFirstSoundpackStart()
  if (not Path.exists(CONFIG_FILE_NAME)) then 
    return true 
  end
  return false
end

function PlaySound(sound, volume, panning)
  volume = volume or UserConfig.Settings.SoundVolume
  panning = panning or 0

  return Audio:Play(sound, volume, panning, UserConfig.Settings.SoundsMuted)
end

function PlayLoopedSound(sound, volume, panning)
  volume = volume or UserConfig.Settings.SoundVolume
  panning = panning or 0

  return Audio:PlayLooped(sound, volume, panning, UserConfig.Settings.SoundMuted)
end

function PlayAmbienceLoop(sound, volume)
  volume = volume or UserConfig.Settings.AmbienceVolume

  return Audio:PlayAmbience(sound, volume, 0, UserConfig.Settings.AmbienceMuted)
end

function PlayMusic(musicFile, volume)
  volume = volume or UserConfig.Settings.MusicVolume
  return Audio:PlayMusic(musicFile, volume, 0, UserConfig.Settings.MusicMuted)
end

function SetSoundVolume(increment)
  if (UserConfig.Settings.SoundVolume + increment <= 100) and (UserConfig.Settings.SoundVolume + increment >= 0) then
    UserConfig.Settings.SoundVolume = UserConfig.Settings.SoundVolume + increment
    PlaySound("Misc/Switch.ogg")
    world.Note("Lautstaerke fuer Sounds: "..tostring(UserConfig.Settings.SoundVolume).."%.")
  else
    if (UserConfig.Settings.SoundVolume + increment > 100) then
      world.Note("Das Maximum fuer die Sound-Lautstaerke wurde erreicht.")
    elseif (UserConfig.Settings.SoundVolume + increment < 0) then
      world.Note("Das Minimum fuer die Sound-Lautstaerke wurde erreicht.")
    end
    PlaySound("Misc/Error.ogg")
  end
end

function SetAmbienceVolume(increment)
  if (UserConfig.Settings.AmbienceVolume + increment <= 100) and (UserConfig.Settings.AmbienceVolume + increment >= 0) then
    UserConfig.Settings.AmbienceVolume = UserConfig.Settings.AmbienceVolume + increment
    PlaySound("Misc/Switch.ogg")
    world.Note("Lautstaerke fuer Umgebung: "..tostring(UserConfig.Settings.AmbienceVolume).."%.")

    local ambience = Audio:GetCurrentAmbienceSoundHandle()

    if (tonumber(ambience) ~= nil) and (Audio:IsPlaying(ambience)) then
      Audio:SetVolume(UserConfig.Settings.AmbienceVolume, ambience)
    end
  else
    if (UserConfig.Settings.AmbienceVolume + increment > 100) then
      world.Note("Das Maximum für die Umgebungs-Lautstaerke wurde erreicht.")
    elseif (UserConfig.Settings.AmbienceVolume + increment < 0) then
      world.Note("Das Minimum für die Umgebungs-Lautstaerke wurde erreicht.")
    end
    PlaySound("Misc/Error.ogg")
  end
end

function SetMusicVolume(increment)
  if (UserConfig.Settings.MusicVolume + increment <= 100) and (UserConfig.Settings.MusicVolume + increment >= 0) then
    UserConfig.Settings.MusicVolume = UserConfig.Settings.MusicVolume + increment
    PlaySound("Misc/Switch.ogg")
    world.Note("Lautstaerke fuer Hintergrundmusik: "..tostring(UserConfig.Settings.MusicVolume).."%.")

    local music = Audio:GetCurrentMusicSoundHandle()

    if (tonumber(music) ~= nil) and (Audio:IsPlaying(music)) then
      Audio:SetVolume(UserConfig.Settings.MusicVolume, music)
    end
  else
    if (UserConfig.Settings.MusicVolume + increment > 100) then
      world.Note("Das Maximum fuer die Hintergrundmusik-Lautstaerke wurde erreicht.")
    elseif (UserConfig.Settings.MusicVolume + increment < 0) then
      world.Note("Das Minimum fuer die Hintergrundmusik-Lautstaerke wurde erreicht.")
    end
    PlaySound("Misc/Error.ogg")
  end
end

function ToggleMute()
  local ambience = Audio:GetCurrentAmbienceSoundHandle()
  local music = Audio:GetCurrentMusicSoundHandle()

  if (UserConfig.Settings.SoundsMuted == 0) and (UserConfig.Settings.AmbienceMuted == 0) and (UserConfig.Settings.MusicMuted == 0) then
    PlaySound("Misc/Switch.ogg")
    UserConfig.Settings.SoundsMuted = 1
    UserConfig.Settings.AmbienceMuted = 1
    UserConfig.Settings.MusicMuted = 1

    if (tonumber(ambience) ~= nil) then
      Audio:Stop(ambience)
    end
    if (tonumber(music) ~= nil) then
      Audio:Stop(music)
    end
    world.Note("Soundpack komplett stummgeschaltet.")
  else
    UserConfig.Settings.SoundsMuted = 0
    UserConfig.Settings.AmbienceMuted = 0
    UserConfig.Settings.MusicMuted = 0
    world.Note("Stummschaltung aufgehoben.")
    PlaySound("Misc/Switch.ogg")
  end
end

function InitializeHotkeys()
  -- Volume
  world.AcceleratorTo("F9", "SetSoundVolume(-5)", sendto.script)
  world.AcceleratorTo("F10", "SetSoundVolume(5)", sendto.script)
  world.AcceleratorTo("ctrl+F9", "SetAmbienceVolume(-5)", sendto.script)
  world.AcceleratorTo("ctrl+F10", "SetAmbienceVolume(5)", sendto.script)
  world.AcceleratorTo("ctrl+shift+F9", "SetMusicVolume(-5)", sendto.script)
  world.AcceleratorTo("ctrl+shift+F10", "SetMusicVolume(5)", sendto.script)
  world.AcceleratorTo("F11", "ToggleMute()", sendto.script)
end

function InitializeNumPad()
  world.Accelerator('Numpad1', 'sw')
  world.Accelerator('Numpad2', 's')
  world.Accelerator('Numpad3', 'so')
  world.Accelerator('Numpad4', 'w')
  world.Accelerator('Numpad6', 'o')
  world.Accelerator('Numpad7', 'nw')
  world.Accelerator('Numpad8', 'n')
  world.AcceleratorTo('Numpad9','world.Execute("no")', sendto.script)
  world.Accelerator('Add', 'r')
  world.Accelerator('Subtract', 'h')
end
]]>
</script>
</muclient>
