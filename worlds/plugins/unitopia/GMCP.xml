<?xml version="1.0" encoding="iso-8859-1"?>
<!DOCTYPE muclient>
<!-- Saved on Sonntag, Mai 24, 2020, 9:18 AM -->
<!-- MuClient version 5.05 -->

<!-- Plugin "GMCP" generated by Plugin Wizard -->

<muclient>
<plugin
   name="GMCP"
   author="FrankieT"
   id="c074220f28dcae21baaf08e6"
   language="Lua"
   purpose="Enables Generic MUD Communication Protocol."
   date_written="2020-05-24 09:16:03"
   requires="5.05"
   version="1.0"
   >

</plugin>


<!--  Get our standard constants -->

<include name="constants.lua"/>
<!--  Triggers  -->

<triggers>
</triggers>

<!--  Aliases  -->

<aliases>
  <alias
    match="^//gmcpdebug$"
    enabled="y"
    regexp="y"
    sequence="100"
    ignore_case="y"
  >
  <send>
    if (GmcpFramework:IsDebugging()) then
      GmcpFramework:DisableDebugging()
    else
      GmcpFramework:EnableDebugging()
    end
  </send>
  </alias>
  <alias
    match="//gmcpsend *"
    enabled="y"
    sequence="100"
  >
  <send>
    local wildcards = %1
    local t = utils.split(wildcards, " ", 1)
    local command, params = t[1], t[2]

    if (params:len() == 0) then
      world.Note("Invalid parameters passed in to gmcpsend command")
    else
      SendGmcp(command, params)
    end
  </send>
  </alias>
</aliases>

<!--  Script  -->

<script>
require("unitopia.gmcp.gmcp-framework")
require("json")
Constants = require("unitopia.constants")
PPI = require("ppi")
GmcpFramework = nil

SupportedGmcpModules = {
  "Char 1",
  "Char.Skills 1",
    "Char.Items 1",
      "Comm.Channel 1",
  "Room 1",
  "Sound 1"
}

function OnPluginInstall()
  GmcpFramework = GmcpFramework()

  PPI.Expose("AddListener", AddListener)
  PPI.Expose("RemoveListener", RemoveListener)
  PPI.Expose("SendGmcp", SendGmcp)
end

function OnPluginTelnetRequest (type, data)
  local clientInfo = { client = "MUSHclient", version = world.Version() }

  if (type ~= Constants.GmcpProtocolNegotiation.GMCP) then
    return false
  end

  if (data == "will") then
    return true
  elseif (data == "send_do") then
    -- Establish handshake
    SendGmcp("Core.Hello", clientInfo)

    -- Now, enable all supported GMCP modules
    SendGmcp("Core.Supports.Set", SupportedGmcpModules)
    return true
  end
  return false
end

function OnPluginTelnetSubnegotiation (type, data)
  if (type ~= Constants.GmcpProtocolNegotiation.GMCP) then
    return
  end
  GmcpFramework:ParseRawData(data)
end

function AddListener(event, callback)
  return GmcpFramework:AddListener(event, callback)
end

function RemoveListener(event, callback)
  return GmcpFramework:RemoveListener(event, callback)
end

function SendGmcp(message, data)
  assert(message, "Message must not be nil")
  assert(data, "Data must not be nil")

  local serializedData = ""

  if (data == "table") then
    serializedData = json.encode(data)
  elseif (data == "string") then
    serializedData = data
  end

  local requestMessage = string.format(message.." "..serializedData)
  GmcpFramework:SendGmcpPacket(requestMessage)
end
</script>
</muclient>
